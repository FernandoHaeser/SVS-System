' ================= Interfaces =================
interface Autenticavel {
  + setSenha(senha: String): void
}

interface Logavel {
  + registrarLog(): void
}

' ================= Classe Abstrata =================
abstract class Usuario {
  - primeiroNome: String
  - ultimoNome: String
  - cpf: String
  - senha: String
  + Usuario(primeiroNome: String, ultimoNome: String, cpf: String)
  + getPrimeiroNome(): String
  + getUltimoNome(): String
  + getCpf(): String
  + setSenha(senha: String): void
  + getSenha(): String
  + mostrarInfos(): String
}

' ================= Modelos =================
class Operador {
  - idFuncionario: String
  + Operador(primeiroNome: String, ultimoNome: String, cpf: String, senha: String, idFuncionario: String)
  + getIdFuncionario(): String
  + getSenha(): String
  + setSenha(senha: String): void
  + mostrarInfos(): String
  + registrarLog(): void
}

class Paciente {
  - vacinas: List<Vacina>
  + Paciente(primeiroNome: String, ultimoNome: String, cpf: String, senha: String)
  + setSenha(senha: String): void
  + getSenha(): String
  + adicionarVacina(vacina: Vacina): void
  + exibirHistoricoVacinas(): String
  + mostrarInfos(): String
  + registrarLog(): void
}

class Vacina {
  - nomeVacina: String
  - marcaVacina: String
  - dataAplicacao: String
  + Vacina(nomeVacina: String, marcaVacina: String, dataAplicacao: String)
  + toString(): String
}

Paciente "1" o-- "0..*" Vacina

' ================= Banco de Dados =================
class BancoOperadores {
  - operadores: List<Operador>
  + adicionarOperador(operador: Operador): void
  + getOperadores(): List<Operador>
}
BancoOperadores "1" o-- "*" Operador

class BancoPacientes {
  - pacientes: List<Paciente>
  + adicionarPaciente(paciente: Paciente): void
  + buscarPorCpf(cpf: String): Paciente
  + getPacientes(): List<Paciente>
  + removerPaciente(paciente: Paciente): void
}
BancoPacientes "1" o-- "*" Paciente

' ================= Controladores =================
class Cadastros {
  + cadastroUsuario(): void
  + cadastroOperador(): void
}
Cadastros ..> BancoPacientes
Cadastros ..> BancoOperadores
Cadastros ..> Login
Cadastros ..> Cadastro

class Logins {
  - menuUsuario: MenuUsuario
  - menuOperador: MenuOperador
  - menu: Login
  + loginPaciente(): void
  + loginOperador(): void
}
Logins ..> BancoPacientes
Logins ..> BancoOperadores
Logins ..> MenuUsuario
Logins ..> MenuOperador
Logins ..> Login
Logins ..> Paciente
Logins ..> Operador

class RegistrarVacina {
  + registrarVacina(operador: Operador): void
}
RegistrarVacina ..> BancoPacientes
RegistrarVacina ..> MenuOperador
RegistrarVacina ..> Paciente
RegistrarVacina ..> Vacina
RegistrarVacina ..> Operador

class DeletarPaciente {
  + deletarPaciente(operador: Operador): void
}
DeletarPaciente ..> BancoPacientes
DeletarPaciente ..> MenuOperador
DeletarPaciente ..> Operador
DeletarPaciente ..> Paciente

class EditarPaciente {
  + editarPaciente(operador: Operador): void
}
EditarPaciente ..> BancoPacientes
EditarPaciente ..> MenuOperador
EditarPaciente ..> Operador
EditarPaciente ..> Paciente

' ================= Views =================
class Cadastro {
  + cadastrar(): void
}
Cadastro ..> Cadastros
Cadastro ..> MenuInicial

class Login {
  + logar(): void
}
Login ..> Logins
Login ..> MenuInicial

class MenuInicial {
  + telaInicial(): void
}
MenuInicial ..> Login
MenuInicial ..> Cadastro

class MenuOperador {
  + menuOperador(operador: Operador): void
}
MenuOperador ..> RegistrarVacina
MenuOperador ..> MenuInicial

class MenuUsuario {
  + menuUsuario(paciente: Paciente): void
}
MenuUsuario ..> MenuInicial

' ================= Relações =================
Usuario ..|> Autenticavel
Operador --|> Usuario
Paciente --|> Usuario
Operador ..|> Logavel
Paciente ..|> Logavel
